{"version":3,"sources":["componants/Button.js","componants/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","console","log","App","useState","id","day","reminder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE1B,OACA,wBAAQA,QAASA,EACjBC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAFV,SAEiBJ,KAIrBF,EAAOO,aAAe,CAClBN,MAAO,aAUID,QClBTQ,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAIb,OACI,yBAAQH,UAAU,SAAlB,UACG,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAM,QAAQC,KAAK,QAAQC,QAN1B,WACZO,QAAQC,IAAI,gBAWpBH,EAAOD,aAAe,CAClBE,MAAO,SAaID,QCUAI,EAlCH,WACV,MAA0BC,mBAAS,CACjC,CACIC,GAAI,EACJZ,KAAM,eACNa,IAAK,kBACLC,UAAU,GAEd,CACIF,GAAI,EACJZ,KAAM,cACNa,IAAK,UACLC,UAAU,GAEd,CACIF,GAAI,EACJZ,KAAM,SACNa,IAAK,YACLC,UAAU,KAjBhB,6BAuBD,OACG,qBAAKV,UAAU,YAAf,SACG,cAAC,EAAD,OCrBQW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f66c39bb.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    return (\r\n    <button onClick={onClick} \r\n    style={{ backgroundColor: color}} \r\n    className='btn'>{text}</button> \r\n    )\r\n}\r\n \r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title}) => {\r\n    const onClick = () => {\r\n        console.log('Click')\r\n    }\r\n    return (\r\n        <header className='header'>\r\n           <h1>{title}</h1>\r\n           <Button color='green' text='Hello' onClick={onClick} />\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task!',\r\n  }\r\n\r\n  Header.propTypes = {\r\n      title: PropTypes.string,\r\n\r\n  }\r\n\r\n // const headingStyle = {\r\n   // color: 'red', \r\n    //backgroundColor: 'black' \r\n  //}\r\n\r\nexport default Header\r\n","import { useState } from 'react'\nimport './App.css';\nimport Header from './componants/Header'\nimport Tasks from './componants/Tasks'\n\n\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Ring Dentist',\n        day: 'Tomorrow, early',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Learn React',\n        day: 'Ongoing',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Go gym',\n        day: 'every day',\n        reminder: true,\n    }\n])\n\n\n\n return (\n    <div className=\"container\">\n       <Header />\n    </div>\n  );\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}